// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.230706.1

#pragma once
#ifndef WINRT_Microsoft_Graphics_Canvas_UI_2_H
#define WINRT_Microsoft_Graphics_Canvas_UI_2_H
#include "winrt/impl/Windows.Foundation.2.h"
#include "winrt/impl/Microsoft.Graphics.Canvas.UI.1.h"
WINRT_EXPORT namespace winrt::Microsoft::Graphics::Canvas::UI
{
    struct CanvasTimingInformation
    {
        int64_t UpdateCount;
        winrt::Windows::Foundation::TimeSpan TotalTime;
        winrt::Windows::Foundation::TimeSpan ElapsedTime;
        bool IsRunningSlowly;
    };
    inline bool operator==(CanvasTimingInformation const& left, CanvasTimingInformation const& right) noexcept
    {
        return left.UpdateCount == right.UpdateCount && left.TotalTime == right.TotalTime && left.ElapsedTime == right.ElapsedTime && left.IsRunningSlowly == right.IsRunningSlowly;
    }
    inline bool operator!=(CanvasTimingInformation const& left, CanvasTimingInformation const& right) noexcept
    {
        return !(left == right);
    }
    struct WINRT_IMPL_EMPTY_BASES CanvasCreateResourcesEventArgs : winrt::Microsoft::Graphics::Canvas::UI::ICanvasCreateResourcesEventArgs
    {
        CanvasCreateResourcesEventArgs(std::nullptr_t) noexcept {}
        CanvasCreateResourcesEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Graphics::Canvas::UI::ICanvasCreateResourcesEventArgs(ptr, take_ownership_from_abi) {}
        explicit CanvasCreateResourcesEventArgs(winrt::Microsoft::Graphics::Canvas::UI::CanvasCreateResourcesReason const& createResourcesReason);
    };
}
#endif
